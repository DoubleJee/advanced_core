package design_pattern;

public class Core {
    /**
     * 设计原则：
     *  1：分开不变和变化的部分，封装变化！！    （找出应用中可能需要变化之处，并把他们独立出来，不要和那些不变化的代码混在一起）
     *  2：面向接口编程，而不是面向实现编程      （接口 x = new 实现();）
     *  3：多用组合，少用继承，                  鸭子类里组合了各种行为(组合了飞和叫)
     *  4：为了对象之间的松耦合设计而努力         （修改主题不会影响观察者，修改观察者不会影响主题，他们之间以遵循的接口来联系，我们可以自由改变他们）
     */
}
